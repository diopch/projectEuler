#include <iostream>
#include <string>
#include <vector>
class A
{
 public:
long long int collatz ( long long int entier, std::vector<long long int>& v)
{
// std::cout << "entier1 collatz : " << entier  << "!\n";
 long long int result = 1;
 while(entier != 1)
 { if(v.size()+1 >entier)
       {
        // std::cout << "v entier : " << v[entier]  << "!\n";
         result = result+v[entier-1];
         break;
       }
   result = result + 1;
   if(entier%2==0)
     entier=entier/2;
   else
     entier= 3*entier+1;
 }
//v.push_back(result);
//std::cout << "entier2 collatz : " << entier  << "!\n";
//std::cout << "result collatz : " << result  << "!\n";
return result;
}

void max(long long int& entier , long long int num)
{
  if(num>entier)
   {
   entier = num;
   //std::cout << "result : " << entier  << "!\n";
   }
}
};
int main()
{
    A a;
  long long int result = 0  ;
  std::vector<long long int> v;
  long long int entier = 1;
  for(int i = 1; i < 1000000; i++ )
  {
    int b = result;
    //std::cout << "entier boucle : " << i  << "!\n";
    a.max(result,a.collatz(i, v));
    if(result != b)
     entier = i;
  }

  std::cout << "entier : " << entier << "!\n";
}
